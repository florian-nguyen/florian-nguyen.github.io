<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>EXPRESS on Florian NGUYEN</title><link>https://florian-nguyen.github.io/tags/express/</link><description>Recent content in EXPRESS on Florian NGUYEN</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 05 Jun 2021 08:06:25 +0600</lastBuildDate><atom:link href="https://florian-nguyen.github.io/tags/express/index.xml" rel="self" type="application/rss+xml"/><item><title>[Fullstack] Todo List</title><link>https://florian-nguyen.github.io/portfolio/web-challenges/todo-list/</link><pubDate>Sat, 05 Jun 2021 08:06:25 +0600</pubDate><guid>https://florian-nguyen.github.io/portfolio/web-challenges/todo-list/</guid><description>This project is a submission to a challenge by devchallenges.io, consisting of a simple todo list whose data is stored in a database.
Features Frontend coded using React and the following libraries : framer-motion, styled-components Express server connected to a PostgreSQL database. New items can be added or removed, and filtered depending on their current status. Demo URL https://fng-dc-todo-list.herokuapp.com/</description></item><item><title>[Fullstack] Image Uploader</title><link>https://florian-nguyen.github.io/portfolio/web-challenges/image-uploader/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://florian-nguyen.github.io/portfolio/web-challenges/image-uploader/</guid><description>This project is a submission to a challenge by devchallenges.io. It allows the user to upload a picture to a server, and to retrieve the generated image URL. The URL can then be copied to the clipboard.
Features Frontend coded using React and the following libraries : framer-motion, styled-components Express server and Multer package to locally store images. Demo URL https://fng-dc-image-uploader.herokuapp.com/</description></item><item><title>[Fullstack] PERN Pokedex</title><link>https://florian-nguyen.github.io/portfolio/personal-projects/pern-pokedex/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://florian-nguyen.github.io/portfolio/personal-projects/pern-pokedex/</guid><description>This project is a humble project that I started while practising on the PERN (PostgreSQL, Express, React, Node) stack. For my own educational purpose, I used both API calls as well as data stored in a Postgre database. The frontend design is entirely self-made, I started from a blank page!
Currently this Pokedex has the following features :
ON/OFF switches with light effects. A &amp;ldquo;home&amp;rdquo; button A &amp;ldquo;List all&amp;rdquo; function allowing one to list all pokemons A detailed page for each pokemon showing stats, type, and a picture of the selected Pokemon.</description></item></channel></rss>